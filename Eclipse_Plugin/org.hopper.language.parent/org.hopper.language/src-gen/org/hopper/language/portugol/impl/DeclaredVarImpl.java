/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.hopper.language.portugol.DeclaredVar;
import org.hopper.language.portugol.PortugolPackage;
import org.hopper.language.portugol.VarName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Declared Var</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.hopper.language.portugol.impl.DeclaredVarImpl#getVarName <em>Var Name</em>}</li>
 * </ul>
 *
 * @generated
 */
public class DeclaredVarImpl extends ExpressionImpl implements DeclaredVar
{
  /**
   * The cached value of the '{@link #getVarName() <em>Var Name</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVarName()
   * @generated
   * @ordered
   */
  protected VarName varName;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected DeclaredVarImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PortugolPackage.Literals.DECLARED_VAR;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarName getVarName()
  {
    if (varName != null && varName.eIsProxy())
    {
      InternalEObject oldVarName = (InternalEObject)varName;
      varName = (VarName)eResolveProxy(oldVarName);
      if (varName != oldVarName)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PortugolPackage.DECLARED_VAR__VAR_NAME, oldVarName, varName));
      }
    }
    return varName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarName basicGetVarName()
  {
    return varName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVarName(VarName newVarName)
  {
    VarName oldVarName = varName;
    varName = newVarName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PortugolPackage.DECLARED_VAR__VAR_NAME, oldVarName, varName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PortugolPackage.DECLARED_VAR__VAR_NAME:
        if (resolve) return getVarName();
        return basicGetVarName();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PortugolPackage.DECLARED_VAR__VAR_NAME:
        setVarName((VarName)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.DECLARED_VAR__VAR_NAME:
        setVarName((VarName)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.DECLARED_VAR__VAR_NAME:
        return varName != null;
    }
    return super.eIsSet(featureID);
  }

} //DeclaredVarImpl
