/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol.impl;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

import org.hopper.language.portugol.CaseList;
import org.hopper.language.portugol.OtherCase;
import org.hopper.language.portugol.PortugolPackage;
import org.hopper.language.portugol.SwitchCaseStatement;
import org.hopper.language.portugol.VarName;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Switch Case Statement</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.hopper.language.portugol.impl.SwitchCaseStatementImpl#getVariable <em>Variable</em>}</li>
 *   <li>{@link org.hopper.language.portugol.impl.SwitchCaseStatementImpl#getCaseList <em>Case List</em>}</li>
 *   <li>{@link org.hopper.language.portugol.impl.SwitchCaseStatementImpl#getOtherCase <em>Other Case</em>}</li>
 * </ul>
 *
 * @generated
 */
public class SwitchCaseStatementImpl extends AbstractCommandImpl implements SwitchCaseStatement
{
  /**
   * The cached value of the '{@link #getVariable() <em>Variable</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVariable()
   * @generated
   * @ordered
   */
  protected VarName variable;

  /**
   * The cached value of the '{@link #getCaseList() <em>Case List</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getCaseList()
   * @generated
   * @ordered
   */
  protected EList<CaseList> caseList;

  /**
   * The cached value of the '{@link #getOtherCase() <em>Other Case</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getOtherCase()
   * @generated
   * @ordered
   */
  protected OtherCase otherCase;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected SwitchCaseStatementImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PortugolPackage.Literals.SWITCH_CASE_STATEMENT;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarName getVariable()
  {
    if (variable != null && variable.eIsProxy())
    {
      InternalEObject oldVariable = (InternalEObject)variable;
      variable = (VarName)eResolveProxy(oldVariable);
      if (variable != oldVariable)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE, oldVariable, variable));
      }
    }
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarName basicGetVariable()
  {
    return variable;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setVariable(VarName newVariable)
  {
    VarName oldVariable = variable;
    variable = newVariable;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE, oldVariable, variable));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public EList<CaseList> getCaseList()
  {
    if (caseList == null)
    {
      caseList = new EObjectContainmentEList<CaseList>(CaseList.class, this, PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST);
    }
    return caseList;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public OtherCase getOtherCase()
  {
    return otherCase;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetOtherCase(OtherCase newOtherCase, NotificationChain msgs)
  {
    OtherCase oldOtherCase = otherCase;
    otherCase = newOtherCase;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE, oldOtherCase, newOtherCase);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setOtherCase(OtherCase newOtherCase)
  {
    if (newOtherCase != otherCase)
    {
      NotificationChain msgs = null;
      if (otherCase != null)
        msgs = ((InternalEObject)otherCase).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE, null, msgs);
      if (newOtherCase != null)
        msgs = ((InternalEObject)newOtherCase).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE, null, msgs);
      msgs = basicSetOtherCase(newOtherCase, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE, newOtherCase, newOtherCase));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST:
        return ((InternalEList<?>)getCaseList()).basicRemove(otherEnd, msgs);
      case PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE:
        return basicSetOtherCase(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE:
        if (resolve) return getVariable();
        return basicGetVariable();
      case PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST:
        return getCaseList();
      case PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE:
        return getOtherCase();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE:
        setVariable((VarName)newValue);
        return;
      case PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST:
        getCaseList().clear();
        getCaseList().addAll((Collection<? extends CaseList>)newValue);
        return;
      case PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE:
        setOtherCase((OtherCase)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE:
        setVariable((VarName)null);
        return;
      case PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST:
        getCaseList().clear();
        return;
      case PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE:
        setOtherCase((OtherCase)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.SWITCH_CASE_STATEMENT__VARIABLE:
        return variable != null;
      case PortugolPackage.SWITCH_CASE_STATEMENT__CASE_LIST:
        return caseList != null && !caseList.isEmpty();
      case PortugolPackage.SWITCH_CASE_STATEMENT__OTHER_CASE:
        return otherCase != null;
    }
    return super.eIsSet(featureID);
  }

} //SwitchCaseStatementImpl
