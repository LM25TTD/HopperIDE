/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.hopper.language.portugol.PortugolFactory
 * @model kind="package"
 * @generated
 */
public interface PortugolPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "portugol";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.hopper.org/language/Portugol";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "portugol";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PortugolPackage eINSTANCE = org.hopper.language.portugol.impl.PortugolPackageImpl.init();

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ModelImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Header</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__HEADER = 0;

  /**
   * The feature id for the '<em><b>Global Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__GLOBAL_DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Subprograms</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__SUBPROGRAMS = 2;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__COMMANDS = 3;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.HeaderBlockImpl <em>Header Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.HeaderBlockImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getHeaderBlock()
   * @generated
   */
  int HEADER_BLOCK = 1;

  /**
   * The feature id for the '<em><b>Algorithm Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HEADER_BLOCK__ALGORITHM_NAME = 0;

  /**
   * The number of structural features of the '<em>Header Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HEADER_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DeclarationsBlockImpl <em>Declarations Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DeclarationsBlockImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclarationsBlock()
   * @generated
   */
  int DECLARATIONS_BLOCK = 2;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS_BLOCK__VARS = 0;

  /**
   * The number of structural features of the '<em>Declarations Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VariableImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 3;

  /**
   * The feature id for the '<em><b>Var Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VAR_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarDeclarationImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 4;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VARS = 0;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DeclaredVarListImpl <em>Declared Var List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DeclaredVarListImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVarList()
   * @generated
   */
  int DECLARED_VAR_LIST = 5;

  /**
   * The feature id for the '<em><b>Vars</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR_LIST__VARS = 0;

  /**
   * The number of structural features of the '<em>Declared Var List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR_LIST_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarNameImpl <em>Var Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarName()
   * @generated
   */
  int VAR_NAME = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Var Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarTypeImpl <em>Var Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarTypeImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarType()
   * @generated
   */
  int VAR_TYPE = 7;

  /**
   * The feature id for the '<em><b>Type Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_TYPE__TYPE_NAME = 0;

  /**
   * The number of structural features of the '<em>Var Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.SubprogramsImpl <em>Subprograms</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.SubprogramsImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprograms()
   * @generated
   */
  int SUBPROGRAMS = 8;

  /**
   * The feature id for the '<em><b>Block Sub Programs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAMS__BLOCK_SUB_PROGRAMS = 0;

  /**
   * The number of structural features of the '<em>Subprograms</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAMS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockSubProgramsImpl <em>Block Sub Programs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockSubProgramsImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockSubPrograms()
   * @generated
   */
  int BLOCK_SUB_PROGRAMS = 9;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__PARAM_LIST = 0;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__COMMANDS = 2;

  /**
   * The number of structural features of the '<em>Block Sub Programs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ProcedureNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getProcedureName()
   * @generated
   */
  int PROCEDURE_NAME = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Procedure Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.FunctionNameImpl <em>Function Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.FunctionNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionName()
   * @generated
   */
  int FUNCTION_NAME = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Function Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockFunctionImpl <em>Block Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockFunctionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockFunction()
   * @generated
   */
  int BLOCK_FUNCTION = 12;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__PARAM_LIST = BLOCK_SUB_PROGRAMS__PARAM_LIST;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__DECLARATIONS = BLOCK_SUB_PROGRAMS__DECLARATIONS;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__COMMANDS = BLOCK_SUB_PROGRAMS__COMMANDS;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__FUNCTION_NAME = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__RETURN_TYPE = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Block Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION_FEATURE_COUNT = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockProcedureImpl <em>Block Procedure</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockProcedureImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockProcedure()
   * @generated
   */
  int BLOCK_PROCEDURE = 13;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__PARAM_LIST = BLOCK_SUB_PROGRAMS__PARAM_LIST;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__DECLARATIONS = BLOCK_SUB_PROGRAMS__DECLARATIONS;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__COMMANDS = BLOCK_SUB_PROGRAMS__COMMANDS;

  /**
   * The feature id for the '<em><b>Procedure</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__PROCEDURE = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Block Procedure</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE_FEATURE_COUNT = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockCommandImpl <em>Block Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockCommand()
   * @generated
   */
  int BLOCK_COMMAND = 14;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_COMMAND__COMMANDS = 0;

  /**
   * The number of structural features of the '<em>Block Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_COMMAND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.AbstractCommandImpl <em>Abstract Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.AbstractCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAbstractCommand()
   * @generated
   */
  int ABSTRACT_COMMAND = 15;

  /**
   * The number of structural features of the '<em>Abstract Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_COMMAND_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BreakStatementImpl <em>Break Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BreakStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBreakStatement()
   * @generated
   */
  int BREAK_STATEMENT = 16;

  /**
   * The number of structural features of the '<em>Break Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BREAK_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ReturnStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReturnStatement()
   * @generated
   */
  int RETURN_STATEMENT = 17;

  /**
   * The number of structural features of the '<em>Return Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.IfStatementImpl <em>If Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.IfStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getIfStatement()
   * @generated
   */
  int IF_STATEMENT = 18;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__COMMANDS = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Else Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT__ELSE_COMMANDS = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>If Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int IF_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.SwitchCaseStatementImpl <em>Switch Case Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.SwitchCaseStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSwitchCaseStatement()
   * @generated
   */
  int SWITCH_CASE_STATEMENT = 19;

  /**
   * The feature id for the '<em><b>Variable</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE_STATEMENT__VARIABLE = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Case List</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE_STATEMENT__CASE_LIST = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Other Case</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE_STATEMENT__OTHER_CASE = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Switch Case Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SWITCH_CASE_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.CaseListImpl <em>Case List</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.CaseListImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getCaseList()
   * @generated
   */
  int CASE_LIST = 20;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIST__EXPR = 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIST__COMMANDS = 1;

  /**
   * The number of structural features of the '<em>Case List</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CASE_LIST_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.OtherCaseImpl <em>Other Case</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.OtherCaseImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOtherCase()
   * @generated
   */
  int OTHER_CASE = 21;

  /**
   * The feature id for the '<em><b>Other Case Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OTHER_CASE__OTHER_CASE_COMMANDS = 0;

  /**
   * The number of structural features of the '<em>Other Case</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OTHER_CASE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ForStatementImpl <em>For Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ForStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getForStatement()
   * @generated
   */
  int FOR_STATEMENT = 22;

  /**
   * The feature id for the '<em><b>Operator Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__OPERATOR_EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Start Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__START_EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>End Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__END_EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The feature id for the '<em><b>Step Expe</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__STEP_EXPE = ABSTRACT_COMMAND_FEATURE_COUNT + 3;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT__COMMANDS = ABSTRACT_COMMAND_FEATURE_COUNT + 4;

  /**
   * The number of structural features of the '<em>For Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FOR_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 5;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.WhileStatementImpl <em>While Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.WhileStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWhileStatement()
   * @generated
   */
  int WHILE_STATEMENT = 23;

  /**
   * The feature id for the '<em><b>While Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__WHILE_EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT__COMMANDS = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>While Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WHILE_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.RepeatStatementImpl <em>Repeat Statement</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.RepeatStatementImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getRepeatStatement()
   * @generated
   */
  int REPEAT_STATEMENT = 24;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__COMMANDS = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Until Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT__UNTIL_EXPR = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Repeat Statement</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int REPEAT_STATEMENT_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.SubprogramParamImpl <em>Subprogram Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.SubprogramParamImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprogramParam()
   * @generated
   */
  int SUBPROGRAM_PARAM = 25;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAM_PARAM__EXPRESSION = 0;

  /**
   * The number of structural features of the '<em>Subprogram Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAM_PARAM_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ReadCommandImpl <em>Read Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ReadCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReadCommand()
   * @generated
   */
  int READ_COMMAND = 26;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_COMMAND__PARAM_LIST = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Read Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_COMMAND_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.WriteCommandImpl <em>Write Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.WriteCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteCommand()
   * @generated
   */
  int WRITE_COMMAND = 27;

  /**
   * The feature id for the '<em><b>Write Command</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_COMMAND__WRITE_COMMAND = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Write Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_COMMAND__WRITE_PARAM = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Write Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_COMMAND_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.WriteParamImpl <em>Write Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.WriteParamImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteParam()
   * @generated
   */
  int WRITE_PARAM = 28;

  /**
   * The feature id for the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM__PARAMS = 0;

  /**
   * The feature id for the '<em><b>Precision</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM__PRECISION = 1;

  /**
   * The number of structural features of the '<em>Write Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.OptDecimalPrecisionImpl <em>Opt Decimal Precision</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.OptDecimalPrecisionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOptDecimalPrecision()
   * @generated
   */
  int OPT_DECIMAL_PRECISION = 29;

  /**
   * The feature id for the '<em><b>First Precision</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION__FIRST_PRECISION = 0;

  /**
   * The feature id for the '<em><b>Second Precision</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION__SECOND_PRECISION = 1;

  /**
   * The number of structural features of the '<em>Opt Decimal Precision</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 30;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__FB_NAME = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__PARAM = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DeclaredVarImpl <em>Declared Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DeclaredVarImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVar()
   * @generated
   */
  int DECLARED_VAR = 31;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR__FB_NAME = EXPRESSION__FB_NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR__PARAM = EXPRESSION__PARAM;

  /**
   * The feature id for the '<em><b>Var Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR__VAR_NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Declared Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.NumericLiteralImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getNumericLiteral()
   * @generated
   */
  int NUMERIC_LITERAL = 32;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__FB_NAME = EXPRESSION__FB_NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__PARAM = EXPRESSION__PARAM;

  /**
   * The feature id for the '<em><b>Int Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__INT_VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Float Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__FLOAT_VALUE = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Numeric Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.StringExpressionImpl <em>String Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.StringExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getStringExpression()
   * @generated
   */
  int STRING_EXPRESSION = 33;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__FB_NAME = EXPRESSION__FB_NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__PARAM = EXPRESSION__PARAM;

  /**
   * The feature id for the '<em><b>Literal String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__LITERAL_STRING = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ReturnExpressionImpl <em>Return Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ReturnExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReturnExpression()
   * @generated
   */
  int RETURN_EXPRESSION = 34;

  /**
   * The feature id for the '<em><b>Expr</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_EXPRESSION__EXPR = RETURN_STATEMENT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Return Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int RETURN_EXPRESSION_FEATURE_COUNT = RETURN_STATEMENT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BinaryOperationImpl <em>Binary Operation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BinaryOperationImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBinaryOperation()
   * @generated
   */
  int BINARY_OPERATION = 35;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__FB_NAME = EXPRESSION__FB_NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__PARAM = EXPRESSION__PARAM;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__LEFT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__OP = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION__RIGHT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The number of structural features of the '<em>Binary Operation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BINARY_OPERATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.UnaryExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getUnaryExpression()
   * @generated
   */
  int UNARY_EXPRESSION = 36;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__FB_NAME = EXPRESSION__FB_NAME;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__PARAM = EXPRESSION__PARAM;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OP = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Operand</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION__OPERAND = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Unary Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int UNARY_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;


  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.hopper.language.portugol.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getHeader <em>Header</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Header</em>'.
   * @see org.hopper.language.portugol.Model#getHeader()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Header();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getGlobalDeclarations <em>Global Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Global Declarations</em>'.
   * @see org.hopper.language.portugol.Model#getGlobalDeclarations()
   * @see #getModel()
   * @generated
   */
  EReference getModel_GlobalDeclarations();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getSubprograms <em>Subprograms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subprograms</em>'.
   * @see org.hopper.language.portugol.Model#getSubprograms()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Subprograms();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see org.hopper.language.portugol.Model#getCommands()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.HeaderBlock <em>Header Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Header Block</em>'.
   * @see org.hopper.language.portugol.HeaderBlock
   * @generated
   */
  EClass getHeaderBlock();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.HeaderBlock#getAlgorithmName <em>Algorithm Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Algorithm Name</em>'.
   * @see org.hopper.language.portugol.HeaderBlock#getAlgorithmName()
   * @see #getHeaderBlock()
   * @generated
   */
  EAttribute getHeaderBlock_AlgorithmName();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.DeclarationsBlock <em>Declarations Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declarations Block</em>'.
   * @see org.hopper.language.portugol.DeclarationsBlock
   * @generated
   */
  EClass getDeclarationsBlock();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.DeclarationsBlock#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.DeclarationsBlock#getVars()
   * @see #getDeclarationsBlock()
   * @generated
   */
  EReference getDeclarationsBlock_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.hopper.language.portugol.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Variable#getVarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var Declaration</em>'.
   * @see org.hopper.language.portugol.Variable#getVarDeclaration()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_VarDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Variable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.hopper.language.portugol.Variable#getType()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_Type();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.hopper.language.portugol.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.VarDeclaration#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.VarDeclaration#getVars()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.DeclaredVarList <em>Declared Var List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declared Var List</em>'.
   * @see org.hopper.language.portugol.DeclaredVarList
   * @generated
   */
  EClass getDeclaredVarList();

  /**
   * Returns the meta object for the reference list '{@link org.hopper.language.portugol.DeclaredVarList#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.DeclaredVarList#getVars()
   * @see #getDeclaredVarList()
   * @generated
   */
  EReference getDeclaredVarList_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Name</em>'.
   * @see org.hopper.language.portugol.VarName
   * @generated
   */
  EClass getVarName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.VarName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.VarName#getName()
   * @see #getVarName()
   * @generated
   */
  EAttribute getVarName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarType <em>Var Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Type</em>'.
   * @see org.hopper.language.portugol.VarType
   * @generated
   */
  EClass getVarType();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.VarType#getTypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Name</em>'.
   * @see org.hopper.language.portugol.VarType#getTypeName()
   * @see #getVarType()
   * @generated
   */
  EAttribute getVarType_TypeName();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Subprograms <em>Subprograms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subprograms</em>'.
   * @see org.hopper.language.portugol.Subprograms
   * @generated
   */
  EClass getSubprograms();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.Subprograms#getBlockSubPrograms <em>Block Sub Programs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Block Sub Programs</em>'.
   * @see org.hopper.language.portugol.Subprograms#getBlockSubPrograms()
   * @see #getSubprograms()
   * @generated
   */
  EReference getSubprograms_BlockSubPrograms();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockSubPrograms <em>Block Sub Programs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Sub Programs</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms
   * @generated
   */
  EClass getBlockSubPrograms();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockSubPrograms#getParamList <em>Param List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param List</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getParamList()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_ParamList();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockSubPrograms#getDeclarations <em>Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declarations</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getDeclarations()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_Declarations();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.BlockSubPrograms#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getCommands()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ProcedureName <em>Procedure Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Procedure Name</em>'.
   * @see org.hopper.language.portugol.ProcedureName
   * @generated
   */
  EClass getProcedureName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.ProcedureName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.ProcedureName#getName()
   * @see #getProcedureName()
   * @generated
   */
  EAttribute getProcedureName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.FunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Name</em>'.
   * @see org.hopper.language.portugol.FunctionName
   * @generated
   */
  EClass getFunctionName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.FunctionName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.FunctionName#getName()
   * @see #getFunctionName()
   * @generated
   */
  EAttribute getFunctionName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockFunction <em>Block Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Function</em>'.
   * @see org.hopper.language.portugol.BlockFunction
   * @generated
   */
  EClass getBlockFunction();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockFunction#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Name</em>'.
   * @see org.hopper.language.portugol.BlockFunction#getFunctionName()
   * @see #getBlockFunction()
   * @generated
   */
  EReference getBlockFunction_FunctionName();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockFunction#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see org.hopper.language.portugol.BlockFunction#getReturnType()
   * @see #getBlockFunction()
   * @generated
   */
  EReference getBlockFunction_ReturnType();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockProcedure <em>Block Procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Procedure</em>'.
   * @see org.hopper.language.portugol.BlockProcedure
   * @generated
   */
  EClass getBlockProcedure();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockProcedure#getProcedure <em>Procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure</em>'.
   * @see org.hopper.language.portugol.BlockProcedure#getProcedure()
   * @see #getBlockProcedure()
   * @generated
   */
  EReference getBlockProcedure_Procedure();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockCommand <em>Block Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Command</em>'.
   * @see org.hopper.language.portugol.BlockCommand
   * @generated
   */
  EClass getBlockCommand();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.BlockCommand#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.BlockCommand#getCommands()
   * @see #getBlockCommand()
   * @generated
   */
  EReference getBlockCommand_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.AbstractCommand <em>Abstract Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Command</em>'.
   * @see org.hopper.language.portugol.AbstractCommand
   * @generated
   */
  EClass getAbstractCommand();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BreakStatement <em>Break Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Break Statement</em>'.
   * @see org.hopper.language.portugol.BreakStatement
   * @generated
   */
  EClass getBreakStatement();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ReturnStatement <em>Return Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Statement</em>'.
   * @see org.hopper.language.portugol.ReturnStatement
   * @generated
   */
  EClass getReturnStatement();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.IfStatement <em>If Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>If Statement</em>'.
   * @see org.hopper.language.portugol.IfStatement
   * @generated
   */
  EClass getIfStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.IfStatement#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.hopper.language.portugol.IfStatement#getExpr()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Expr();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.IfStatement#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.IfStatement#getCommands()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_Commands();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.IfStatement#getElseCommands <em>Else Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Else Commands</em>'.
   * @see org.hopper.language.portugol.IfStatement#getElseCommands()
   * @see #getIfStatement()
   * @generated
   */
  EReference getIfStatement_ElseCommands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.SwitchCaseStatement <em>Switch Case Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Switch Case Statement</em>'.
   * @see org.hopper.language.portugol.SwitchCaseStatement
   * @generated
   */
  EClass getSwitchCaseStatement();

  /**
   * Returns the meta object for the reference '{@link org.hopper.language.portugol.SwitchCaseStatement#getVariable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Variable</em>'.
   * @see org.hopper.language.portugol.SwitchCaseStatement#getVariable()
   * @see #getSwitchCaseStatement()
   * @generated
   */
  EReference getSwitchCaseStatement_Variable();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.SwitchCaseStatement#getCaseList <em>Case List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Case List</em>'.
   * @see org.hopper.language.portugol.SwitchCaseStatement#getCaseList()
   * @see #getSwitchCaseStatement()
   * @generated
   */
  EReference getSwitchCaseStatement_CaseList();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.SwitchCaseStatement#getOtherCase <em>Other Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Other Case</em>'.
   * @see org.hopper.language.portugol.SwitchCaseStatement#getOtherCase()
   * @see #getSwitchCaseStatement()
   * @generated
   */
  EReference getSwitchCaseStatement_OtherCase();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.CaseList <em>Case List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Case List</em>'.
   * @see org.hopper.language.portugol.CaseList
   * @generated
   */
  EClass getCaseList();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.CaseList#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.hopper.language.portugol.CaseList#getExpr()
   * @see #getCaseList()
   * @generated
   */
  EReference getCaseList_Expr();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.CaseList#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.CaseList#getCommands()
   * @see #getCaseList()
   * @generated
   */
  EReference getCaseList_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.OtherCase <em>Other Case</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Other Case</em>'.
   * @see org.hopper.language.portugol.OtherCase
   * @generated
   */
  EClass getOtherCase();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.OtherCase#getOtherCaseCommands <em>Other Case Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Other Case Commands</em>'.
   * @see org.hopper.language.portugol.OtherCase#getOtherCaseCommands()
   * @see #getOtherCase()
   * @generated
   */
  EReference getOtherCase_OtherCaseCommands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ForStatement <em>For Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>For Statement</em>'.
   * @see org.hopper.language.portugol.ForStatement
   * @generated
   */
  EClass getForStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ForStatement#getOperatorExpr <em>Operator Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operator Expr</em>'.
   * @see org.hopper.language.portugol.ForStatement#getOperatorExpr()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_OperatorExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ForStatement#getStartExpr <em>Start Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Start Expr</em>'.
   * @see org.hopper.language.portugol.ForStatement#getStartExpr()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_StartExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ForStatement#getEndExpr <em>End Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>End Expr</em>'.
   * @see org.hopper.language.portugol.ForStatement#getEndExpr()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_EndExpr();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ForStatement#getStepExpe <em>Step Expe</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Step Expe</em>'.
   * @see org.hopper.language.portugol.ForStatement#getStepExpe()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_StepExpe();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.ForStatement#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.ForStatement#getCommands()
   * @see #getForStatement()
   * @generated
   */
  EReference getForStatement_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.WhileStatement <em>While Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>While Statement</em>'.
   * @see org.hopper.language.portugol.WhileStatement
   * @generated
   */
  EClass getWhileStatement();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WhileStatement#getWhileExpr <em>While Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>While Expr</em>'.
   * @see org.hopper.language.portugol.WhileStatement#getWhileExpr()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_WhileExpr();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.WhileStatement#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.WhileStatement#getCommands()
   * @see #getWhileStatement()
   * @generated
   */
  EReference getWhileStatement_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.RepeatStatement <em>Repeat Statement</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Repeat Statement</em>'.
   * @see org.hopper.language.portugol.RepeatStatement
   * @generated
   */
  EClass getRepeatStatement();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.RepeatStatement#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.RepeatStatement#getCommands()
   * @see #getRepeatStatement()
   * @generated
   */
  EReference getRepeatStatement_Commands();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.RepeatStatement#getUntilExpr <em>Until Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Until Expr</em>'.
   * @see org.hopper.language.portugol.RepeatStatement#getUntilExpr()
   * @see #getRepeatStatement()
   * @generated
   */
  EReference getRepeatStatement_UntilExpr();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.SubprogramParam <em>Subprogram Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subprogram Param</em>'.
   * @see org.hopper.language.portugol.SubprogramParam
   * @generated
   */
  EClass getSubprogramParam();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.SubprogramParam#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.hopper.language.portugol.SubprogramParam#getExpression()
   * @see #getSubprogramParam()
   * @generated
   */
  EReference getSubprogramParam_Expression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ReadCommand <em>Read Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Read Command</em>'.
   * @see org.hopper.language.portugol.ReadCommand
   * @generated
   */
  EClass getReadCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ReadCommand#getParamList <em>Param List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param List</em>'.
   * @see org.hopper.language.portugol.ReadCommand#getParamList()
   * @see #getReadCommand()
   * @generated
   */
  EReference getReadCommand_ParamList();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.WriteCommand <em>Write Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Write Command</em>'.
   * @see org.hopper.language.portugol.WriteCommand
   * @generated
   */
  EClass getWriteCommand();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.WriteCommand#getWriteCommand <em>Write Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Write Command</em>'.
   * @see org.hopper.language.portugol.WriteCommand#getWriteCommand()
   * @see #getWriteCommand()
   * @generated
   */
  EAttribute getWriteCommand_WriteCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WriteCommand#getWriteParam <em>Write Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Write Param</em>'.
   * @see org.hopper.language.portugol.WriteCommand#getWriteParam()
   * @see #getWriteCommand()
   * @generated
   */
  EReference getWriteCommand_WriteParam();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.WriteParam <em>Write Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Write Param</em>'.
   * @see org.hopper.language.portugol.WriteParam
   * @generated
   */
  EClass getWriteParam();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WriteParam#getParams <em>Params</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Params</em>'.
   * @see org.hopper.language.portugol.WriteParam#getParams()
   * @see #getWriteParam()
   * @generated
   */
  EReference getWriteParam_Params();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WriteParam#getPrecision <em>Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Precision</em>'.
   * @see org.hopper.language.portugol.WriteParam#getPrecision()
   * @see #getWriteParam()
   * @generated
   */
  EReference getWriteParam_Precision();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.OptDecimalPrecision <em>Opt Decimal Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Opt Decimal Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision
   * @generated
   */
  EClass getOptDecimalPrecision();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.OptDecimalPrecision#getFirstPrecision <em>First Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>First Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision#getFirstPrecision()
   * @see #getOptDecimalPrecision()
   * @generated
   */
  EAttribute getOptDecimalPrecision_FirstPrecision();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.OptDecimalPrecision#getSecondPrecision <em>Second Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Second Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision#getSecondPrecision()
   * @see #getOptDecimalPrecision()
   * @generated
   */
  EAttribute getOptDecimalPrecision_SecondPrecision();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.hopper.language.portugol.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the reference '{@link org.hopper.language.portugol.Expression#getFbName <em>Fb Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fb Name</em>'.
   * @see org.hopper.language.portugol.Expression#getFbName()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_FbName();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Expression#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see org.hopper.language.portugol.Expression#getParam()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Param();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.DeclaredVar <em>Declared Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declared Var</em>'.
   * @see org.hopper.language.portugol.DeclaredVar
   * @generated
   */
  EClass getDeclaredVar();

  /**
   * Returns the meta object for the reference '{@link org.hopper.language.portugol.DeclaredVar#getVarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Var Name</em>'.
   * @see org.hopper.language.portugol.DeclaredVar#getVarName()
   * @see #getDeclaredVar()
   * @generated
   */
  EReference getDeclaredVar_VarName();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.NumericLiteral <em>Numeric Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Numeric Literal</em>'.
   * @see org.hopper.language.portugol.NumericLiteral
   * @generated
   */
  EClass getNumericLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.NumericLiteral#isIntValue <em>Int Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Int Value</em>'.
   * @see org.hopper.language.portugol.NumericLiteral#isIntValue()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_IntValue();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.NumericLiteral#isFloatValue <em>Float Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Float Value</em>'.
   * @see org.hopper.language.portugol.NumericLiteral#isFloatValue()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_FloatValue();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.StringExpression <em>String Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Expression</em>'.
   * @see org.hopper.language.portugol.StringExpression
   * @generated
   */
  EClass getStringExpression();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.StringExpression#getLiteralString <em>Literal String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Literal String</em>'.
   * @see org.hopper.language.portugol.StringExpression#getLiteralString()
   * @see #getStringExpression()
   * @generated
   */
  EAttribute getStringExpression_LiteralString();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ReturnExpression <em>Return Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Return Expression</em>'.
   * @see org.hopper.language.portugol.ReturnExpression
   * @generated
   */
  EClass getReturnExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ReturnExpression#getExpr <em>Expr</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expr</em>'.
   * @see org.hopper.language.portugol.ReturnExpression#getExpr()
   * @see #getReturnExpression()
   * @generated
   */
  EReference getReturnExpression_Expr();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BinaryOperation <em>Binary Operation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Binary Operation</em>'.
   * @see org.hopper.language.portugol.BinaryOperation
   * @generated
   */
  EClass getBinaryOperation();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BinaryOperation#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.hopper.language.portugol.BinaryOperation#getLeft()
   * @see #getBinaryOperation()
   * @generated
   */
  EReference getBinaryOperation_Left();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.BinaryOperation#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.hopper.language.portugol.BinaryOperation#getOp()
   * @see #getBinaryOperation()
   * @generated
   */
  EAttribute getBinaryOperation_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BinaryOperation#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.hopper.language.portugol.BinaryOperation#getRight()
   * @see #getBinaryOperation()
   * @generated
   */
  EReference getBinaryOperation_Right();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.UnaryExpression <em>Unary Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Unary Expression</em>'.
   * @see org.hopper.language.portugol.UnaryExpression
   * @generated
   */
  EClass getUnaryExpression();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.UnaryExpression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.hopper.language.portugol.UnaryExpression#getOp()
   * @see #getUnaryExpression()
   * @generated
   */
  EAttribute getUnaryExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.UnaryExpression#getOperand <em>Operand</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Operand</em>'.
   * @see org.hopper.language.portugol.UnaryExpression#getOperand()
   * @see #getUnaryExpression()
   * @generated
   */
  EReference getUnaryExpression_Operand();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PortugolFactory getPortugolFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ModelImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Header</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__HEADER = eINSTANCE.getModel_Header();

    /**
     * The meta object literal for the '<em><b>Global Declarations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__GLOBAL_DECLARATIONS = eINSTANCE.getModel_GlobalDeclarations();

    /**
     * The meta object literal for the '<em><b>Subprograms</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__SUBPROGRAMS = eINSTANCE.getModel_Subprograms();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__COMMANDS = eINSTANCE.getModel_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.HeaderBlockImpl <em>Header Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.HeaderBlockImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getHeaderBlock()
     * @generated
     */
    EClass HEADER_BLOCK = eINSTANCE.getHeaderBlock();

    /**
     * The meta object literal for the '<em><b>Algorithm Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute HEADER_BLOCK__ALGORITHM_NAME = eINSTANCE.getHeaderBlock_AlgorithmName();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DeclarationsBlockImpl <em>Declarations Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DeclarationsBlockImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclarationsBlock()
     * @generated
     */
    EClass DECLARATIONS_BLOCK = eINSTANCE.getDeclarationsBlock();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATIONS_BLOCK__VARS = eINSTANCE.getDeclarationsBlock_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VariableImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Var Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VAR_DECLARATION = eINSTANCE.getVariable_VarDeclaration();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__TYPE = eINSTANCE.getVariable_Type();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarDeclarationImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VARS = eINSTANCE.getVarDeclaration_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DeclaredVarListImpl <em>Declared Var List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DeclaredVarListImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVarList()
     * @generated
     */
    EClass DECLARED_VAR_LIST = eINSTANCE.getDeclaredVarList();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARED_VAR_LIST__VARS = eINSTANCE.getDeclaredVarList_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarNameImpl <em>Var Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarName()
     * @generated
     */
    EClass VAR_NAME = eINSTANCE.getVarName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_NAME__NAME = eINSTANCE.getVarName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarTypeImpl <em>Var Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarTypeImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarType()
     * @generated
     */
    EClass VAR_TYPE = eINSTANCE.getVarType();

    /**
     * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_TYPE__TYPE_NAME = eINSTANCE.getVarType_TypeName();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.SubprogramsImpl <em>Subprograms</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.SubprogramsImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprograms()
     * @generated
     */
    EClass SUBPROGRAMS = eINSTANCE.getSubprograms();

    /**
     * The meta object literal for the '<em><b>Block Sub Programs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBPROGRAMS__BLOCK_SUB_PROGRAMS = eINSTANCE.getSubprograms_BlockSubPrograms();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockSubProgramsImpl <em>Block Sub Programs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockSubProgramsImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockSubPrograms()
     * @generated
     */
    EClass BLOCK_SUB_PROGRAMS = eINSTANCE.getBlockSubPrograms();

    /**
     * The meta object literal for the '<em><b>Param List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__PARAM_LIST = eINSTANCE.getBlockSubPrograms_ParamList();

    /**
     * The meta object literal for the '<em><b>Declarations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__DECLARATIONS = eINSTANCE.getBlockSubPrograms_Declarations();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__COMMANDS = eINSTANCE.getBlockSubPrograms_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ProcedureNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getProcedureName()
     * @generated
     */
    EClass PROCEDURE_NAME = eINSTANCE.getProcedureName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCEDURE_NAME__NAME = eINSTANCE.getProcedureName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.FunctionNameImpl <em>Function Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.FunctionNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionName()
     * @generated
     */
    EClass FUNCTION_NAME = eINSTANCE.getFunctionName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_NAME__NAME = eINSTANCE.getFunctionName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockFunctionImpl <em>Block Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockFunctionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockFunction()
     * @generated
     */
    EClass BLOCK_FUNCTION = eINSTANCE.getBlockFunction();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_FUNCTION__FUNCTION_NAME = eINSTANCE.getBlockFunction_FunctionName();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_FUNCTION__RETURN_TYPE = eINSTANCE.getBlockFunction_ReturnType();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockProcedureImpl <em>Block Procedure</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockProcedureImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockProcedure()
     * @generated
     */
    EClass BLOCK_PROCEDURE = eINSTANCE.getBlockProcedure();

    /**
     * The meta object literal for the '<em><b>Procedure</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_PROCEDURE__PROCEDURE = eINSTANCE.getBlockProcedure_Procedure();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockCommandImpl <em>Block Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockCommand()
     * @generated
     */
    EClass BLOCK_COMMAND = eINSTANCE.getBlockCommand();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_COMMAND__COMMANDS = eINSTANCE.getBlockCommand_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.AbstractCommandImpl <em>Abstract Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.AbstractCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAbstractCommand()
     * @generated
     */
    EClass ABSTRACT_COMMAND = eINSTANCE.getAbstractCommand();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BreakStatementImpl <em>Break Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BreakStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBreakStatement()
     * @generated
     */
    EClass BREAK_STATEMENT = eINSTANCE.getBreakStatement();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ReturnStatementImpl <em>Return Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ReturnStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReturnStatement()
     * @generated
     */
    EClass RETURN_STATEMENT = eINSTANCE.getReturnStatement();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.IfStatementImpl <em>If Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.IfStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getIfStatement()
     * @generated
     */
    EClass IF_STATEMENT = eINSTANCE.getIfStatement();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__EXPR = eINSTANCE.getIfStatement_Expr();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__COMMANDS = eINSTANCE.getIfStatement_Commands();

    /**
     * The meta object literal for the '<em><b>Else Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference IF_STATEMENT__ELSE_COMMANDS = eINSTANCE.getIfStatement_ElseCommands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.SwitchCaseStatementImpl <em>Switch Case Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.SwitchCaseStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSwitchCaseStatement()
     * @generated
     */
    EClass SWITCH_CASE_STATEMENT = eINSTANCE.getSwitchCaseStatement();

    /**
     * The meta object literal for the '<em><b>Variable</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SWITCH_CASE_STATEMENT__VARIABLE = eINSTANCE.getSwitchCaseStatement_Variable();

    /**
     * The meta object literal for the '<em><b>Case List</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SWITCH_CASE_STATEMENT__CASE_LIST = eINSTANCE.getSwitchCaseStatement_CaseList();

    /**
     * The meta object literal for the '<em><b>Other Case</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SWITCH_CASE_STATEMENT__OTHER_CASE = eINSTANCE.getSwitchCaseStatement_OtherCase();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.CaseListImpl <em>Case List</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.CaseListImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getCaseList()
     * @generated
     */
    EClass CASE_LIST = eINSTANCE.getCaseList();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_LIST__EXPR = eINSTANCE.getCaseList_Expr();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference CASE_LIST__COMMANDS = eINSTANCE.getCaseList_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.OtherCaseImpl <em>Other Case</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.OtherCaseImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOtherCase()
     * @generated
     */
    EClass OTHER_CASE = eINSTANCE.getOtherCase();

    /**
     * The meta object literal for the '<em><b>Other Case Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference OTHER_CASE__OTHER_CASE_COMMANDS = eINSTANCE.getOtherCase_OtherCaseCommands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ForStatementImpl <em>For Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ForStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getForStatement()
     * @generated
     */
    EClass FOR_STATEMENT = eINSTANCE.getForStatement();

    /**
     * The meta object literal for the '<em><b>Operator Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__OPERATOR_EXPR = eINSTANCE.getForStatement_OperatorExpr();

    /**
     * The meta object literal for the '<em><b>Start Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__START_EXPR = eINSTANCE.getForStatement_StartExpr();

    /**
     * The meta object literal for the '<em><b>End Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__END_EXPR = eINSTANCE.getForStatement_EndExpr();

    /**
     * The meta object literal for the '<em><b>Step Expe</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__STEP_EXPE = eINSTANCE.getForStatement_StepExpe();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FOR_STATEMENT__COMMANDS = eINSTANCE.getForStatement_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.WhileStatementImpl <em>While Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.WhileStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWhileStatement()
     * @generated
     */
    EClass WHILE_STATEMENT = eINSTANCE.getWhileStatement();

    /**
     * The meta object literal for the '<em><b>While Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__WHILE_EXPR = eINSTANCE.getWhileStatement_WhileExpr();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WHILE_STATEMENT__COMMANDS = eINSTANCE.getWhileStatement_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.RepeatStatementImpl <em>Repeat Statement</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.RepeatStatementImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getRepeatStatement()
     * @generated
     */
    EClass REPEAT_STATEMENT = eINSTANCE.getRepeatStatement();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__COMMANDS = eINSTANCE.getRepeatStatement_Commands();

    /**
     * The meta object literal for the '<em><b>Until Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference REPEAT_STATEMENT__UNTIL_EXPR = eINSTANCE.getRepeatStatement_UntilExpr();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.SubprogramParamImpl <em>Subprogram Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.SubprogramParamImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprogramParam()
     * @generated
     */
    EClass SUBPROGRAM_PARAM = eINSTANCE.getSubprogramParam();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBPROGRAM_PARAM__EXPRESSION = eINSTANCE.getSubprogramParam_Expression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ReadCommandImpl <em>Read Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ReadCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReadCommand()
     * @generated
     */
    EClass READ_COMMAND = eINSTANCE.getReadCommand();

    /**
     * The meta object literal for the '<em><b>Param List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference READ_COMMAND__PARAM_LIST = eINSTANCE.getReadCommand_ParamList();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.WriteCommandImpl <em>Write Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.WriteCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteCommand()
     * @generated
     */
    EClass WRITE_COMMAND = eINSTANCE.getWriteCommand();

    /**
     * The meta object literal for the '<em><b>Write Command</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute WRITE_COMMAND__WRITE_COMMAND = eINSTANCE.getWriteCommand_WriteCommand();

    /**
     * The meta object literal for the '<em><b>Write Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_COMMAND__WRITE_PARAM = eINSTANCE.getWriteCommand_WriteParam();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.WriteParamImpl <em>Write Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.WriteParamImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteParam()
     * @generated
     */
    EClass WRITE_PARAM = eINSTANCE.getWriteParam();

    /**
     * The meta object literal for the '<em><b>Params</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_PARAM__PARAMS = eINSTANCE.getWriteParam_Params();

    /**
     * The meta object literal for the '<em><b>Precision</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_PARAM__PRECISION = eINSTANCE.getWriteParam_Precision();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.OptDecimalPrecisionImpl <em>Opt Decimal Precision</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.OptDecimalPrecisionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOptDecimalPrecision()
     * @generated
     */
    EClass OPT_DECIMAL_PRECISION = eINSTANCE.getOptDecimalPrecision();

    /**
     * The meta object literal for the '<em><b>First Precision</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPT_DECIMAL_PRECISION__FIRST_PRECISION = eINSTANCE.getOptDecimalPrecision_FirstPrecision();

    /**
     * The meta object literal for the '<em><b>Second Precision</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPT_DECIMAL_PRECISION__SECOND_PRECISION = eINSTANCE.getOptDecimalPrecision_SecondPrecision();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Fb Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__FB_NAME = eINSTANCE.getExpression_FbName();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__PARAM = eINSTANCE.getExpression_Param();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DeclaredVarImpl <em>Declared Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DeclaredVarImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVar()
     * @generated
     */
    EClass DECLARED_VAR = eINSTANCE.getDeclaredVar();

    /**
     * The meta object literal for the '<em><b>Var Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARED_VAR__VAR_NAME = eINSTANCE.getDeclaredVar_VarName();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.NumericLiteralImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getNumericLiteral()
     * @generated
     */
    EClass NUMERIC_LITERAL = eINSTANCE.getNumericLiteral();

    /**
     * The meta object literal for the '<em><b>Int Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__INT_VALUE = eINSTANCE.getNumericLiteral_IntValue();

    /**
     * The meta object literal for the '<em><b>Float Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__FLOAT_VALUE = eINSTANCE.getNumericLiteral_FloatValue();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.StringExpressionImpl <em>String Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.StringExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getStringExpression()
     * @generated
     */
    EClass STRING_EXPRESSION = eINSTANCE.getStringExpression();

    /**
     * The meta object literal for the '<em><b>Literal String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_EXPRESSION__LITERAL_STRING = eINSTANCE.getStringExpression_LiteralString();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ReturnExpressionImpl <em>Return Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ReturnExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReturnExpression()
     * @generated
     */
    EClass RETURN_EXPRESSION = eINSTANCE.getReturnExpression();

    /**
     * The meta object literal for the '<em><b>Expr</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference RETURN_EXPRESSION__EXPR = eINSTANCE.getReturnExpression_Expr();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BinaryOperationImpl <em>Binary Operation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BinaryOperationImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBinaryOperation()
     * @generated
     */
    EClass BINARY_OPERATION = eINSTANCE.getBinaryOperation();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_OPERATION__LEFT = eINSTANCE.getBinaryOperation_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute BINARY_OPERATION__OP = eINSTANCE.getBinaryOperation_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BINARY_OPERATION__RIGHT = eINSTANCE.getBinaryOperation_Right();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.UnaryExpressionImpl <em>Unary Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.UnaryExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getUnaryExpression()
     * @generated
     */
    EClass UNARY_EXPRESSION = eINSTANCE.getUnaryExpression();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute UNARY_EXPRESSION__OP = eINSTANCE.getUnaryExpression_Op();

    /**
     * The meta object literal for the '<em><b>Operand</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference UNARY_EXPRESSION__OPERAND = eINSTANCE.getUnaryExpression_Operand();

  }

} //PortugolPackage
