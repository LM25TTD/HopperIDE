/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol;

import org.eclipse.emf.ecore.EAttribute;
import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.EPackage;
import org.eclipse.emf.ecore.EReference;

/**
 * <!-- begin-user-doc -->
 * The <b>Package</b> for the model.
 * It contains accessors for the meta objects to represent
 * <ul>
 *   <li>each class,</li>
 *   <li>each feature of each class,</li>
 *   <li>each enum,</li>
 *   <li>and each data type</li>
 * </ul>
 * <!-- end-user-doc -->
 * @see org.hopper.language.portugol.PortugolFactory
 * @model kind="package"
 * @generated
 */
public interface PortugolPackage extends EPackage
{
  /**
   * The package name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNAME = "portugol";

  /**
   * The package namespace URI.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_URI = "http://www.hopper.org/language/Portugol";

  /**
   * The package namespace name.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  String eNS_PREFIX = "portugol";

  /**
   * The singleton instance of the package.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  PortugolPackage eINSTANCE = org.hopper.language.portugol.impl.PortugolPackageImpl.init();

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ModelImpl <em>Model</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ModelImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getModel()
   * @generated
   */
  int MODEL = 0;

  /**
   * The feature id for the '<em><b>Header</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__HEADER = 0;

  /**
   * The feature id for the '<em><b>Global Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__GLOBAL_DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Subprograms</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__SUBPROGRAMS = 2;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL__COMMANDS = 3;

  /**
   * The number of structural features of the '<em>Model</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MODEL_FEATURE_COUNT = 4;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.HeaderBlockImpl <em>Header Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.HeaderBlockImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getHeaderBlock()
   * @generated
   */
  int HEADER_BLOCK = 1;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HEADER_BLOCK__NAME = 0;

  /**
   * The number of structural features of the '<em>Header Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int HEADER_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DeclarationsBlockImpl <em>Declarations Block</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DeclarationsBlockImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclarationsBlock()
   * @generated
   */
  int DECLARATIONS_BLOCK = 2;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS_BLOCK__VARS = 0;

  /**
   * The number of structural features of the '<em>Declarations Block</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARATIONS_BLOCK_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VariableImpl <em>Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VariableImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVariable()
   * @generated
   */
  int VARIABLE = 3;

  /**
   * The feature id for the '<em><b>Var Declaration</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__VAR_DECLARATION = 0;

  /**
   * The feature id for the '<em><b>Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE__TYPE = 1;

  /**
   * The number of structural features of the '<em>Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VARIABLE_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarDeclarationImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarDeclaration()
   * @generated
   */
  int VAR_DECLARATION = 4;

  /**
   * The feature id for the '<em><b>Vars</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION__VARS = 0;

  /**
   * The number of structural features of the '<em>Var Declaration</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_DECLARATION_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DeclaredVarImpl <em>Declared Var</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DeclaredVarImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVar()
   * @generated
   */
  int DECLARED_VAR = 5;

  /**
   * The feature id for the '<em><b>Vars</b></em>' reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR__VARS = 0;

  /**
   * The number of structural features of the '<em>Declared Var</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DECLARED_VAR_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarNameImpl <em>Var Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarName()
   * @generated
   */
  int VAR_NAME = 6;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Var Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.VarTypeImpl <em>Var Type</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.VarTypeImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarType()
   * @generated
   */
  int VAR_TYPE = 7;

  /**
   * The feature id for the '<em><b>Type Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_TYPE__TYPE_NAME = 0;

  /**
   * The number of structural features of the '<em>Var Type</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int VAR_TYPE_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.SubprogramsImpl <em>Subprograms</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.SubprogramsImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprograms()
   * @generated
   */
  int SUBPROGRAMS = 8;

  /**
   * The feature id for the '<em><b>Block Sub Programs</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAMS__BLOCK_SUB_PROGRAMS = 0;

  /**
   * The number of structural features of the '<em>Subprograms</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUBPROGRAMS_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockSubProgramsImpl <em>Block Sub Programs</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockSubProgramsImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockSubPrograms()
   * @generated
   */
  int BLOCK_SUB_PROGRAMS = 9;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__PARAM_LIST = 0;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__DECLARATIONS = 1;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS__COMMANDS = 2;

  /**
   * The number of structural features of the '<em>Block Sub Programs</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_SUB_PROGRAMS_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.FunctionNameImpl <em>Function Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.FunctionNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionName()
   * @generated
   */
  int FUNCTION_NAME = 10;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Function Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ProcedureNameImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getProcedureName()
   * @generated
   */
  int PROCEDURE_NAME = 11;

  /**
   * The feature id for the '<em><b>Name</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME__NAME = 0;

  /**
   * The number of structural features of the '<em>Procedure Name</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int PROCEDURE_NAME_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockFunctionImpl <em>Block Function</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockFunctionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockFunction()
   * @generated
   */
  int BLOCK_FUNCTION = 12;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__PARAM_LIST = BLOCK_SUB_PROGRAMS__PARAM_LIST;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__DECLARATIONS = BLOCK_SUB_PROGRAMS__DECLARATIONS;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__COMMANDS = BLOCK_SUB_PROGRAMS__COMMANDS;

  /**
   * The feature id for the '<em><b>Function Name</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__FUNCTION_NAME = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Return Type</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION__RETURN_TYPE = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Block Function</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_FUNCTION_FEATURE_COUNT = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockProcedureImpl <em>Block Procedure</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockProcedureImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockProcedure()
   * @generated
   */
  int BLOCK_PROCEDURE = 13;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__PARAM_LIST = BLOCK_SUB_PROGRAMS__PARAM_LIST;

  /**
   * The feature id for the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__DECLARATIONS = BLOCK_SUB_PROGRAMS__DECLARATIONS;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__COMMANDS = BLOCK_SUB_PROGRAMS__COMMANDS;

  /**
   * The feature id for the '<em><b>Procedure</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE__PROCEDURE = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Block Procedure</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_PROCEDURE_FEATURE_COUNT = BLOCK_SUB_PROGRAMS_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BlockCommandImpl <em>Block Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BlockCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockCommand()
   * @generated
   */
  int BLOCK_COMMAND = 14;

  /**
   * The feature id for the '<em><b>Commands</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_COMMAND__COMMANDS = 0;

  /**
   * The number of structural features of the '<em>Block Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BLOCK_COMMAND_FEATURE_COUNT = 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.AbstractCommandImpl <em>Abstract Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.AbstractCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAbstractCommand()
   * @generated
   */
  int ABSTRACT_COMMAND = 15;

  /**
   * The number of structural features of the '<em>Abstract Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ABSTRACT_COMMAND_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ReadCommandImpl <em>Read Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ReadCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReadCommand()
   * @generated
   */
  int READ_COMMAND = 16;

  /**
   * The feature id for the '<em><b>Param List</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_COMMAND__PARAM_LIST = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Read Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int READ_COMMAND_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.WriteCommandImpl <em>Write Command</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.WriteCommandImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteCommand()
   * @generated
   */
  int WRITE_COMMAND = 17;

  /**
   * The feature id for the '<em><b>Write Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_COMMAND__WRITE_PARAM = ABSTRACT_COMMAND_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Write Command</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_COMMAND_FEATURE_COUNT = ABSTRACT_COMMAND_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.WriteParamImpl <em>Write Param</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.WriteParamImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteParam()
   * @generated
   */
  int WRITE_PARAM = 18;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM__EXPRESSION = 0;

  /**
   * The feature id for the '<em><b>Precision</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM__PRECISION = 1;

  /**
   * The number of structural features of the '<em>Write Param</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int WRITE_PARAM_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ExpressionImpl <em>Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpression()
   * @generated
   */
  int EXPRESSION = 19;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__LEFT = 0;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__OP = 1;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION__RIGHT = 2;

  /**
   * The number of structural features of the '<em>Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_FEATURE_COUNT = 3;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.FunctionCallImpl <em>Function Call</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.FunctionCallImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionCall()
   * @generated
   */
  int FUNCTION_CALL = 20;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Fb Name</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__FB_NAME = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Param</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL__PARAM = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Function Call</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int FUNCTION_CALL_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.OptDecimalPrecisionImpl <em>Opt Decimal Precision</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.OptDecimalPrecisionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOptDecimalPrecision()
   * @generated
   */
  int OPT_DECIMAL_PRECISION = 21;

  /**
   * The feature id for the '<em><b>First Precision</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION__FIRST_PRECISION = 0;

  /**
   * The feature id for the '<em><b>Second Precision</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION__SECOND_PRECISION = 1;

  /**
   * The number of structural features of the '<em>Opt Decimal Precision</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int OPT_DECIMAL_PRECISION_FEATURE_COUNT = 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ConstantImpl <em>Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ConstantImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getConstant()
   * @generated
   */
  int CONSTANT = 22;

  /**
   * The number of structural features of the '<em>Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int CONSTANT_FEATURE_COUNT = 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.NumericLiteralImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getNumericLiteral()
   * @generated
   */
  int NUMERIC_LITERAL = 23;

  /**
   * The feature id for the '<em><b>Int Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__INT_VALUE = CONSTANT_FEATURE_COUNT + 0;

  /**
   * The feature id for the '<em><b>Float Value</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL__FLOAT_VALUE = CONSTANT_FEATURE_COUNT + 1;

  /**
   * The number of structural features of the '<em>Numeric Literal</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int NUMERIC_LITERAL_FEATURE_COUNT = CONSTANT_FEATURE_COUNT + 2;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.StringExpressionImpl <em>String Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.StringExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getStringExpression()
   * @generated
   */
  int STRING_EXPRESSION = 24;

  /**
   * The feature id for the '<em><b>Literal String</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION__LITERAL_STRING = CONSTANT_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>String Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int STRING_EXPRESSION_FEATURE_COUNT = CONSTANT_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.XorExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getXorExpression()
   * @generated
   */
  int XOR_EXPRESSION = 25;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Xor Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int XOR_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.AndExpressionImpl <em>And Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.AndExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAndExpression()
   * @generated
   */
  int AND_EXPRESSION = 26;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>And Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int AND_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.CompExpressionImpl <em>Comp Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.CompExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getCompExpression()
   * @generated
   */
  int COMP_EXPRESSION = 27;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Comp Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int COMP_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.EquExpressionImpl <em>Equ Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.EquExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getEquExpression()
   * @generated
   */
  int EQU_EXPRESSION = 28;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Equ Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EQU_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.AddExpressionImpl <em>Add Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.AddExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAddExpression()
   * @generated
   */
  int ADD_EXPRESSION = 29;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Add Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ADD_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.SubExpressionImpl <em>Sub Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.SubExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubExpression()
   * @generated
   */
  int SUB_EXPRESSION = 30;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Sub Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int SUB_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.MultiplyImpl <em>Multiply</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.MultiplyImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getMultiply()
   * @generated
   */
  int MULTIPLY = 31;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Multiply</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MULTIPLY_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.DivisionImpl <em>Division</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.DivisionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDivision()
   * @generated
   */
  int DIVISION = 32;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Division</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int DIVISION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ModImpl <em>Mod</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ModImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getMod()
   * @generated
   */
  int MOD = 33;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Mod</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int MOD_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.PowerExpressionImpl <em>Power Expression</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.PowerExpressionImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getPowerExpression()
   * @generated
   */
  int POWER_EXPRESSION = 34;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_EXPRESSION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_EXPRESSION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_EXPRESSION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The number of structural features of the '<em>Power Expression</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int POWER_EXPRESSION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.BooleanNegationImpl <em>Boolean Negation</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.BooleanNegationImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBooleanNegation()
   * @generated
   */
  int BOOLEAN_NEGATION = 35;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_NEGATION__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_NEGATION__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_NEGATION__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_NEGATION__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Boolean Negation</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int BOOLEAN_NEGATION_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ArithmeticSignedImpl <em>Arithmetic Signed</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ArithmeticSignedImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getArithmeticSigned()
   * @generated
   */
  int ARITHMETIC_SIGNED = 36;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_SIGNED__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_SIGNED__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_SIGNED__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Expression</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_SIGNED__EXPRESSION = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Arithmetic Signed</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int ARITHMETIC_SIGNED_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ExpressionConstantImpl <em>Expression Constant</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ExpressionConstantImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpressionConstant()
   * @generated
   */
  int EXPRESSION_CONSTANT = 37;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Constant</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_CONSTANT_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;

  /**
   * The meta object id for the '{@link org.hopper.language.portugol.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see org.hopper.language.portugol.impl.ExpressionVariableImpl
   * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpressionVariable()
   * @generated
   */
  int EXPRESSION_VARIABLE = 38;

  /**
   * The feature id for the '<em><b>Left</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE__LEFT = EXPRESSION__LEFT;

  /**
   * The feature id for the '<em><b>Op</b></em>' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE__OP = EXPRESSION__OP;

  /**
   * The feature id for the '<em><b>Right</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE__RIGHT = EXPRESSION__RIGHT;

  /**
   * The feature id for the '<em><b>Value</b></em>' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE__VALUE = EXPRESSION_FEATURE_COUNT + 0;

  /**
   * The number of structural features of the '<em>Expression Variable</em>' class.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   * @ordered
   */
  int EXPRESSION_VARIABLE_FEATURE_COUNT = EXPRESSION_FEATURE_COUNT + 1;


  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Model <em>Model</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Model</em>'.
   * @see org.hopper.language.portugol.Model
   * @generated
   */
  EClass getModel();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getHeader <em>Header</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Header</em>'.
   * @see org.hopper.language.portugol.Model#getHeader()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Header();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getGlobalDeclarations <em>Global Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Global Declarations</em>'.
   * @see org.hopper.language.portugol.Model#getGlobalDeclarations()
   * @see #getModel()
   * @generated
   */
  EReference getModel_GlobalDeclarations();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getSubprograms <em>Subprograms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Subprograms</em>'.
   * @see org.hopper.language.portugol.Model#getSubprograms()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Subprograms();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Model#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Commands</em>'.
   * @see org.hopper.language.portugol.Model#getCommands()
   * @see #getModel()
   * @generated
   */
  EReference getModel_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.HeaderBlock <em>Header Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Header Block</em>'.
   * @see org.hopper.language.portugol.HeaderBlock
   * @generated
   */
  EClass getHeaderBlock();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.HeaderBlock#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.HeaderBlock#getName()
   * @see #getHeaderBlock()
   * @generated
   */
  EAttribute getHeaderBlock_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.DeclarationsBlock <em>Declarations Block</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declarations Block</em>'.
   * @see org.hopper.language.portugol.DeclarationsBlock
   * @generated
   */
  EClass getDeclarationsBlock();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.DeclarationsBlock#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.DeclarationsBlock#getVars()
   * @see #getDeclarationsBlock()
   * @generated
   */
  EReference getDeclarationsBlock_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Variable <em>Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Variable</em>'.
   * @see org.hopper.language.portugol.Variable
   * @generated
   */
  EClass getVariable();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Variable#getVarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Var Declaration</em>'.
   * @see org.hopper.language.portugol.Variable#getVarDeclaration()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_VarDeclaration();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Variable#getType <em>Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Type</em>'.
   * @see org.hopper.language.portugol.Variable#getType()
   * @see #getVariable()
   * @generated
   */
  EReference getVariable_Type();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarDeclaration <em>Var Declaration</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Declaration</em>'.
   * @see org.hopper.language.portugol.VarDeclaration
   * @generated
   */
  EClass getVarDeclaration();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.VarDeclaration#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.VarDeclaration#getVars()
   * @see #getVarDeclaration()
   * @generated
   */
  EReference getVarDeclaration_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.DeclaredVar <em>Declared Var</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Declared Var</em>'.
   * @see org.hopper.language.portugol.DeclaredVar
   * @generated
   */
  EClass getDeclaredVar();

  /**
   * Returns the meta object for the reference list '{@link org.hopper.language.portugol.DeclaredVar#getVars <em>Vars</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference list '<em>Vars</em>'.
   * @see org.hopper.language.portugol.DeclaredVar#getVars()
   * @see #getDeclaredVar()
   * @generated
   */
  EReference getDeclaredVar_Vars();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarName <em>Var Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Name</em>'.
   * @see org.hopper.language.portugol.VarName
   * @generated
   */
  EClass getVarName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.VarName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.VarName#getName()
   * @see #getVarName()
   * @generated
   */
  EAttribute getVarName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.VarType <em>Var Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Var Type</em>'.
   * @see org.hopper.language.portugol.VarType
   * @generated
   */
  EClass getVarType();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.VarType#getTypeName <em>Type Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Type Name</em>'.
   * @see org.hopper.language.portugol.VarType#getTypeName()
   * @see #getVarType()
   * @generated
   */
  EAttribute getVarType_TypeName();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Subprograms <em>Subprograms</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Subprograms</em>'.
   * @see org.hopper.language.portugol.Subprograms
   * @generated
   */
  EClass getSubprograms();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.Subprograms#getBlockSubPrograms <em>Block Sub Programs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Block Sub Programs</em>'.
   * @see org.hopper.language.portugol.Subprograms#getBlockSubPrograms()
   * @see #getSubprograms()
   * @generated
   */
  EReference getSubprograms_BlockSubPrograms();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockSubPrograms <em>Block Sub Programs</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Sub Programs</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms
   * @generated
   */
  EClass getBlockSubPrograms();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockSubPrograms#getParamList <em>Param List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param List</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getParamList()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_ParamList();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockSubPrograms#getDeclarations <em>Declarations</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Declarations</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getDeclarations()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_Declarations();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.BlockSubPrograms#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.BlockSubPrograms#getCommands()
   * @see #getBlockSubPrograms()
   * @generated
   */
  EReference getBlockSubPrograms_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.FunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Name</em>'.
   * @see org.hopper.language.portugol.FunctionName
   * @generated
   */
  EClass getFunctionName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.FunctionName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.FunctionName#getName()
   * @see #getFunctionName()
   * @generated
   */
  EAttribute getFunctionName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ProcedureName <em>Procedure Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Procedure Name</em>'.
   * @see org.hopper.language.portugol.ProcedureName
   * @generated
   */
  EClass getProcedureName();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.ProcedureName#getName <em>Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Name</em>'.
   * @see org.hopper.language.portugol.ProcedureName#getName()
   * @see #getProcedureName()
   * @generated
   */
  EAttribute getProcedureName_Name();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockFunction <em>Block Function</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Function</em>'.
   * @see org.hopper.language.portugol.BlockFunction
   * @generated
   */
  EClass getBlockFunction();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockFunction#getFunctionName <em>Function Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Function Name</em>'.
   * @see org.hopper.language.portugol.BlockFunction#getFunctionName()
   * @see #getBlockFunction()
   * @generated
   */
  EReference getBlockFunction_FunctionName();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockFunction#getReturnType <em>Return Type</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Return Type</em>'.
   * @see org.hopper.language.portugol.BlockFunction#getReturnType()
   * @see #getBlockFunction()
   * @generated
   */
  EReference getBlockFunction_ReturnType();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockProcedure <em>Block Procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Procedure</em>'.
   * @see org.hopper.language.portugol.BlockProcedure
   * @generated
   */
  EClass getBlockProcedure();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BlockProcedure#getProcedure <em>Procedure</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Procedure</em>'.
   * @see org.hopper.language.portugol.BlockProcedure#getProcedure()
   * @see #getBlockProcedure()
   * @generated
   */
  EReference getBlockProcedure_Procedure();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BlockCommand <em>Block Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Block Command</em>'.
   * @see org.hopper.language.portugol.BlockCommand
   * @generated
   */
  EClass getBlockCommand();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.BlockCommand#getCommands <em>Commands</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Commands</em>'.
   * @see org.hopper.language.portugol.BlockCommand#getCommands()
   * @see #getBlockCommand()
   * @generated
   */
  EReference getBlockCommand_Commands();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.AbstractCommand <em>Abstract Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Abstract Command</em>'.
   * @see org.hopper.language.portugol.AbstractCommand
   * @generated
   */
  EClass getAbstractCommand();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ReadCommand <em>Read Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Read Command</em>'.
   * @see org.hopper.language.portugol.ReadCommand
   * @generated
   */
  EClass getReadCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ReadCommand#getParamList <em>Param List</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param List</em>'.
   * @see org.hopper.language.portugol.ReadCommand#getParamList()
   * @see #getReadCommand()
   * @generated
   */
  EReference getReadCommand_ParamList();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.WriteCommand <em>Write Command</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Write Command</em>'.
   * @see org.hopper.language.portugol.WriteCommand
   * @generated
   */
  EClass getWriteCommand();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WriteCommand#getWriteParam <em>Write Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Write Param</em>'.
   * @see org.hopper.language.portugol.WriteCommand#getWriteParam()
   * @see #getWriteCommand()
   * @generated
   */
  EReference getWriteCommand_WriteParam();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.WriteParam <em>Write Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Write Param</em>'.
   * @see org.hopper.language.portugol.WriteParam
   * @generated
   */
  EClass getWriteParam();

  /**
   * Returns the meta object for the containment reference list '{@link org.hopper.language.portugol.WriteParam#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference list '<em>Expression</em>'.
   * @see org.hopper.language.portugol.WriteParam#getExpression()
   * @see #getWriteParam()
   * @generated
   */
  EReference getWriteParam_Expression();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.WriteParam#getPrecision <em>Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Precision</em>'.
   * @see org.hopper.language.portugol.WriteParam#getPrecision()
   * @see #getWriteParam()
   * @generated
   */
  EReference getWriteParam_Precision();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Expression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression</em>'.
   * @see org.hopper.language.portugol.Expression
   * @generated
   */
  EClass getExpression();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Expression#getLeft <em>Left</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Left</em>'.
   * @see org.hopper.language.portugol.Expression#getLeft()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Left();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.Expression#getOp <em>Op</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Op</em>'.
   * @see org.hopper.language.portugol.Expression#getOp()
   * @see #getExpression()
   * @generated
   */
  EAttribute getExpression_Op();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.Expression#getRight <em>Right</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Right</em>'.
   * @see org.hopper.language.portugol.Expression#getRight()
   * @see #getExpression()
   * @generated
   */
  EReference getExpression_Right();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.FunctionCall <em>Function Call</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Function Call</em>'.
   * @see org.hopper.language.portugol.FunctionCall
   * @generated
   */
  EClass getFunctionCall();

  /**
   * Returns the meta object for the reference '{@link org.hopper.language.portugol.FunctionCall#getFbName <em>Fb Name</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Fb Name</em>'.
   * @see org.hopper.language.portugol.FunctionCall#getFbName()
   * @see #getFunctionCall()
   * @generated
   */
  EReference getFunctionCall_FbName();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.FunctionCall#getParam <em>Param</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Param</em>'.
   * @see org.hopper.language.portugol.FunctionCall#getParam()
   * @see #getFunctionCall()
   * @generated
   */
  EReference getFunctionCall_Param();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.OptDecimalPrecision <em>Opt Decimal Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Opt Decimal Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision
   * @generated
   */
  EClass getOptDecimalPrecision();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.OptDecimalPrecision#getFirstPrecision <em>First Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>First Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision#getFirstPrecision()
   * @see #getOptDecimalPrecision()
   * @generated
   */
  EAttribute getOptDecimalPrecision_FirstPrecision();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.OptDecimalPrecision#getSecondPrecision <em>Second Precision</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Second Precision</em>'.
   * @see org.hopper.language.portugol.OptDecimalPrecision#getSecondPrecision()
   * @see #getOptDecimalPrecision()
   * @generated
   */
  EAttribute getOptDecimalPrecision_SecondPrecision();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Constant <em>Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Constant</em>'.
   * @see org.hopper.language.portugol.Constant
   * @generated
   */
  EClass getConstant();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.NumericLiteral <em>Numeric Literal</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Numeric Literal</em>'.
   * @see org.hopper.language.portugol.NumericLiteral
   * @generated
   */
  EClass getNumericLiteral();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.NumericLiteral#isIntValue <em>Int Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Int Value</em>'.
   * @see org.hopper.language.portugol.NumericLiteral#isIntValue()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_IntValue();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.NumericLiteral#isFloatValue <em>Float Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Float Value</em>'.
   * @see org.hopper.language.portugol.NumericLiteral#isFloatValue()
   * @see #getNumericLiteral()
   * @generated
   */
  EAttribute getNumericLiteral_FloatValue();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.StringExpression <em>String Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>String Expression</em>'.
   * @see org.hopper.language.portugol.StringExpression
   * @generated
   */
  EClass getStringExpression();

  /**
   * Returns the meta object for the attribute '{@link org.hopper.language.portugol.StringExpression#getLiteralString <em>Literal String</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the attribute '<em>Literal String</em>'.
   * @see org.hopper.language.portugol.StringExpression#getLiteralString()
   * @see #getStringExpression()
   * @generated
   */
  EAttribute getStringExpression_LiteralString();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.XorExpression <em>Xor Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Xor Expression</em>'.
   * @see org.hopper.language.portugol.XorExpression
   * @generated
   */
  EClass getXorExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.AndExpression <em>And Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>And Expression</em>'.
   * @see org.hopper.language.portugol.AndExpression
   * @generated
   */
  EClass getAndExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.CompExpression <em>Comp Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Comp Expression</em>'.
   * @see org.hopper.language.portugol.CompExpression
   * @generated
   */
  EClass getCompExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.EquExpression <em>Equ Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Equ Expression</em>'.
   * @see org.hopper.language.portugol.EquExpression
   * @generated
   */
  EClass getEquExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.AddExpression <em>Add Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Add Expression</em>'.
   * @see org.hopper.language.portugol.AddExpression
   * @generated
   */
  EClass getAddExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.SubExpression <em>Sub Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Sub Expression</em>'.
   * @see org.hopper.language.portugol.SubExpression
   * @generated
   */
  EClass getSubExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Multiply <em>Multiply</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Multiply</em>'.
   * @see org.hopper.language.portugol.Multiply
   * @generated
   */
  EClass getMultiply();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Division <em>Division</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Division</em>'.
   * @see org.hopper.language.portugol.Division
   * @generated
   */
  EClass getDivision();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.Mod <em>Mod</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Mod</em>'.
   * @see org.hopper.language.portugol.Mod
   * @generated
   */
  EClass getMod();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.PowerExpression <em>Power Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Power Expression</em>'.
   * @see org.hopper.language.portugol.PowerExpression
   * @generated
   */
  EClass getPowerExpression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.BooleanNegation <em>Boolean Negation</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Boolean Negation</em>'.
   * @see org.hopper.language.portugol.BooleanNegation
   * @generated
   */
  EClass getBooleanNegation();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.BooleanNegation#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.hopper.language.portugol.BooleanNegation#getExpression()
   * @see #getBooleanNegation()
   * @generated
   */
  EReference getBooleanNegation_Expression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ArithmeticSigned <em>Arithmetic Signed</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Arithmetic Signed</em>'.
   * @see org.hopper.language.portugol.ArithmeticSigned
   * @generated
   */
  EClass getArithmeticSigned();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ArithmeticSigned#getExpression <em>Expression</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Expression</em>'.
   * @see org.hopper.language.portugol.ArithmeticSigned#getExpression()
   * @see #getArithmeticSigned()
   * @generated
   */
  EReference getArithmeticSigned_Expression();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ExpressionConstant <em>Expression Constant</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Constant</em>'.
   * @see org.hopper.language.portugol.ExpressionConstant
   * @generated
   */
  EClass getExpressionConstant();

  /**
   * Returns the meta object for the containment reference '{@link org.hopper.language.portugol.ExpressionConstant#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the containment reference '<em>Value</em>'.
   * @see org.hopper.language.portugol.ExpressionConstant#getValue()
   * @see #getExpressionConstant()
   * @generated
   */
  EReference getExpressionConstant_Value();

  /**
   * Returns the meta object for class '{@link org.hopper.language.portugol.ExpressionVariable <em>Expression Variable</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for class '<em>Expression Variable</em>'.
   * @see org.hopper.language.portugol.ExpressionVariable
   * @generated
   */
  EClass getExpressionVariable();

  /**
   * Returns the meta object for the reference '{@link org.hopper.language.portugol.ExpressionVariable#getValue <em>Value</em>}'.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the meta object for the reference '<em>Value</em>'.
   * @see org.hopper.language.portugol.ExpressionVariable#getValue()
   * @see #getExpressionVariable()
   * @generated
   */
  EReference getExpressionVariable_Value();

  /**
   * Returns the factory that creates the instances of the model.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @return the factory that creates the instances of the model.
   * @generated
   */
  PortugolFactory getPortugolFactory();

  /**
   * <!-- begin-user-doc -->
   * Defines literals for the meta objects that represent
   * <ul>
   *   <li>each class,</li>
   *   <li>each feature of each class,</li>
   *   <li>each enum,</li>
   *   <li>and each data type</li>
   * </ul>
   * <!-- end-user-doc -->
   * @generated
   */
  interface Literals
  {
    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ModelImpl <em>Model</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ModelImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getModel()
     * @generated
     */
    EClass MODEL = eINSTANCE.getModel();

    /**
     * The meta object literal for the '<em><b>Header</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__HEADER = eINSTANCE.getModel_Header();

    /**
     * The meta object literal for the '<em><b>Global Declarations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__GLOBAL_DECLARATIONS = eINSTANCE.getModel_GlobalDeclarations();

    /**
     * The meta object literal for the '<em><b>Subprograms</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__SUBPROGRAMS = eINSTANCE.getModel_Subprograms();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference MODEL__COMMANDS = eINSTANCE.getModel_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.HeaderBlockImpl <em>Header Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.HeaderBlockImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getHeaderBlock()
     * @generated
     */
    EClass HEADER_BLOCK = eINSTANCE.getHeaderBlock();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute HEADER_BLOCK__NAME = eINSTANCE.getHeaderBlock_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DeclarationsBlockImpl <em>Declarations Block</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DeclarationsBlockImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclarationsBlock()
     * @generated
     */
    EClass DECLARATIONS_BLOCK = eINSTANCE.getDeclarationsBlock();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARATIONS_BLOCK__VARS = eINSTANCE.getDeclarationsBlock_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VariableImpl <em>Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VariableImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVariable()
     * @generated
     */
    EClass VARIABLE = eINSTANCE.getVariable();

    /**
     * The meta object literal for the '<em><b>Var Declaration</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__VAR_DECLARATION = eINSTANCE.getVariable_VarDeclaration();

    /**
     * The meta object literal for the '<em><b>Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VARIABLE__TYPE = eINSTANCE.getVariable_Type();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarDeclarationImpl <em>Var Declaration</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarDeclarationImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarDeclaration()
     * @generated
     */
    EClass VAR_DECLARATION = eINSTANCE.getVarDeclaration();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference VAR_DECLARATION__VARS = eINSTANCE.getVarDeclaration_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DeclaredVarImpl <em>Declared Var</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DeclaredVarImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDeclaredVar()
     * @generated
     */
    EClass DECLARED_VAR = eINSTANCE.getDeclaredVar();

    /**
     * The meta object literal for the '<em><b>Vars</b></em>' reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference DECLARED_VAR__VARS = eINSTANCE.getDeclaredVar_Vars();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarNameImpl <em>Var Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarName()
     * @generated
     */
    EClass VAR_NAME = eINSTANCE.getVarName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_NAME__NAME = eINSTANCE.getVarName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.VarTypeImpl <em>Var Type</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.VarTypeImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getVarType()
     * @generated
     */
    EClass VAR_TYPE = eINSTANCE.getVarType();

    /**
     * The meta object literal for the '<em><b>Type Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute VAR_TYPE__TYPE_NAME = eINSTANCE.getVarType_TypeName();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.SubprogramsImpl <em>Subprograms</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.SubprogramsImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubprograms()
     * @generated
     */
    EClass SUBPROGRAMS = eINSTANCE.getSubprograms();

    /**
     * The meta object literal for the '<em><b>Block Sub Programs</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference SUBPROGRAMS__BLOCK_SUB_PROGRAMS = eINSTANCE.getSubprograms_BlockSubPrograms();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockSubProgramsImpl <em>Block Sub Programs</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockSubProgramsImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockSubPrograms()
     * @generated
     */
    EClass BLOCK_SUB_PROGRAMS = eINSTANCE.getBlockSubPrograms();

    /**
     * The meta object literal for the '<em><b>Param List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__PARAM_LIST = eINSTANCE.getBlockSubPrograms_ParamList();

    /**
     * The meta object literal for the '<em><b>Declarations</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__DECLARATIONS = eINSTANCE.getBlockSubPrograms_Declarations();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_SUB_PROGRAMS__COMMANDS = eINSTANCE.getBlockSubPrograms_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.FunctionNameImpl <em>Function Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.FunctionNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionName()
     * @generated
     */
    EClass FUNCTION_NAME = eINSTANCE.getFunctionName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute FUNCTION_NAME__NAME = eINSTANCE.getFunctionName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ProcedureNameImpl <em>Procedure Name</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ProcedureNameImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getProcedureName()
     * @generated
     */
    EClass PROCEDURE_NAME = eINSTANCE.getProcedureName();

    /**
     * The meta object literal for the '<em><b>Name</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute PROCEDURE_NAME__NAME = eINSTANCE.getProcedureName_Name();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockFunctionImpl <em>Block Function</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockFunctionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockFunction()
     * @generated
     */
    EClass BLOCK_FUNCTION = eINSTANCE.getBlockFunction();

    /**
     * The meta object literal for the '<em><b>Function Name</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_FUNCTION__FUNCTION_NAME = eINSTANCE.getBlockFunction_FunctionName();

    /**
     * The meta object literal for the '<em><b>Return Type</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_FUNCTION__RETURN_TYPE = eINSTANCE.getBlockFunction_ReturnType();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockProcedureImpl <em>Block Procedure</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockProcedureImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockProcedure()
     * @generated
     */
    EClass BLOCK_PROCEDURE = eINSTANCE.getBlockProcedure();

    /**
     * The meta object literal for the '<em><b>Procedure</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_PROCEDURE__PROCEDURE = eINSTANCE.getBlockProcedure_Procedure();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BlockCommandImpl <em>Block Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BlockCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBlockCommand()
     * @generated
     */
    EClass BLOCK_COMMAND = eINSTANCE.getBlockCommand();

    /**
     * The meta object literal for the '<em><b>Commands</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BLOCK_COMMAND__COMMANDS = eINSTANCE.getBlockCommand_Commands();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.AbstractCommandImpl <em>Abstract Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.AbstractCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAbstractCommand()
     * @generated
     */
    EClass ABSTRACT_COMMAND = eINSTANCE.getAbstractCommand();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ReadCommandImpl <em>Read Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ReadCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getReadCommand()
     * @generated
     */
    EClass READ_COMMAND = eINSTANCE.getReadCommand();

    /**
     * The meta object literal for the '<em><b>Param List</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference READ_COMMAND__PARAM_LIST = eINSTANCE.getReadCommand_ParamList();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.WriteCommandImpl <em>Write Command</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.WriteCommandImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteCommand()
     * @generated
     */
    EClass WRITE_COMMAND = eINSTANCE.getWriteCommand();

    /**
     * The meta object literal for the '<em><b>Write Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_COMMAND__WRITE_PARAM = eINSTANCE.getWriteCommand_WriteParam();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.WriteParamImpl <em>Write Param</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.WriteParamImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getWriteParam()
     * @generated
     */
    EClass WRITE_PARAM = eINSTANCE.getWriteParam();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference list feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_PARAM__EXPRESSION = eINSTANCE.getWriteParam_Expression();

    /**
     * The meta object literal for the '<em><b>Precision</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference WRITE_PARAM__PRECISION = eINSTANCE.getWriteParam_Precision();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ExpressionImpl <em>Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpression()
     * @generated
     */
    EClass EXPRESSION = eINSTANCE.getExpression();

    /**
     * The meta object literal for the '<em><b>Left</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__LEFT = eINSTANCE.getExpression_Left();

    /**
     * The meta object literal for the '<em><b>Op</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute EXPRESSION__OP = eINSTANCE.getExpression_Op();

    /**
     * The meta object literal for the '<em><b>Right</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION__RIGHT = eINSTANCE.getExpression_Right();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.FunctionCallImpl <em>Function Call</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.FunctionCallImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getFunctionCall()
     * @generated
     */
    EClass FUNCTION_CALL = eINSTANCE.getFunctionCall();

    /**
     * The meta object literal for the '<em><b>Fb Name</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_CALL__FB_NAME = eINSTANCE.getFunctionCall_FbName();

    /**
     * The meta object literal for the '<em><b>Param</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference FUNCTION_CALL__PARAM = eINSTANCE.getFunctionCall_Param();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.OptDecimalPrecisionImpl <em>Opt Decimal Precision</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.OptDecimalPrecisionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getOptDecimalPrecision()
     * @generated
     */
    EClass OPT_DECIMAL_PRECISION = eINSTANCE.getOptDecimalPrecision();

    /**
     * The meta object literal for the '<em><b>First Precision</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPT_DECIMAL_PRECISION__FIRST_PRECISION = eINSTANCE.getOptDecimalPrecision_FirstPrecision();

    /**
     * The meta object literal for the '<em><b>Second Precision</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute OPT_DECIMAL_PRECISION__SECOND_PRECISION = eINSTANCE.getOptDecimalPrecision_SecondPrecision();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ConstantImpl <em>Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ConstantImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getConstant()
     * @generated
     */
    EClass CONSTANT = eINSTANCE.getConstant();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.NumericLiteralImpl <em>Numeric Literal</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.NumericLiteralImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getNumericLiteral()
     * @generated
     */
    EClass NUMERIC_LITERAL = eINSTANCE.getNumericLiteral();

    /**
     * The meta object literal for the '<em><b>Int Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__INT_VALUE = eINSTANCE.getNumericLiteral_IntValue();

    /**
     * The meta object literal for the '<em><b>Float Value</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute NUMERIC_LITERAL__FLOAT_VALUE = eINSTANCE.getNumericLiteral_FloatValue();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.StringExpressionImpl <em>String Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.StringExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getStringExpression()
     * @generated
     */
    EClass STRING_EXPRESSION = eINSTANCE.getStringExpression();

    /**
     * The meta object literal for the '<em><b>Literal String</b></em>' attribute feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EAttribute STRING_EXPRESSION__LITERAL_STRING = eINSTANCE.getStringExpression_LiteralString();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.XorExpressionImpl <em>Xor Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.XorExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getXorExpression()
     * @generated
     */
    EClass XOR_EXPRESSION = eINSTANCE.getXorExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.AndExpressionImpl <em>And Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.AndExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAndExpression()
     * @generated
     */
    EClass AND_EXPRESSION = eINSTANCE.getAndExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.CompExpressionImpl <em>Comp Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.CompExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getCompExpression()
     * @generated
     */
    EClass COMP_EXPRESSION = eINSTANCE.getCompExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.EquExpressionImpl <em>Equ Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.EquExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getEquExpression()
     * @generated
     */
    EClass EQU_EXPRESSION = eINSTANCE.getEquExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.AddExpressionImpl <em>Add Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.AddExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getAddExpression()
     * @generated
     */
    EClass ADD_EXPRESSION = eINSTANCE.getAddExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.SubExpressionImpl <em>Sub Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.SubExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getSubExpression()
     * @generated
     */
    EClass SUB_EXPRESSION = eINSTANCE.getSubExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.MultiplyImpl <em>Multiply</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.MultiplyImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getMultiply()
     * @generated
     */
    EClass MULTIPLY = eINSTANCE.getMultiply();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.DivisionImpl <em>Division</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.DivisionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getDivision()
     * @generated
     */
    EClass DIVISION = eINSTANCE.getDivision();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ModImpl <em>Mod</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ModImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getMod()
     * @generated
     */
    EClass MOD = eINSTANCE.getMod();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.PowerExpressionImpl <em>Power Expression</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.PowerExpressionImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getPowerExpression()
     * @generated
     */
    EClass POWER_EXPRESSION = eINSTANCE.getPowerExpression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.BooleanNegationImpl <em>Boolean Negation</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.BooleanNegationImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getBooleanNegation()
     * @generated
     */
    EClass BOOLEAN_NEGATION = eINSTANCE.getBooleanNegation();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference BOOLEAN_NEGATION__EXPRESSION = eINSTANCE.getBooleanNegation_Expression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ArithmeticSignedImpl <em>Arithmetic Signed</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ArithmeticSignedImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getArithmeticSigned()
     * @generated
     */
    EClass ARITHMETIC_SIGNED = eINSTANCE.getArithmeticSigned();

    /**
     * The meta object literal for the '<em><b>Expression</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference ARITHMETIC_SIGNED__EXPRESSION = eINSTANCE.getArithmeticSigned_Expression();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ExpressionConstantImpl <em>Expression Constant</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ExpressionConstantImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpressionConstant()
     * @generated
     */
    EClass EXPRESSION_CONSTANT = eINSTANCE.getExpressionConstant();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' containment reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_CONSTANT__VALUE = eINSTANCE.getExpressionConstant_Value();

    /**
     * The meta object literal for the '{@link org.hopper.language.portugol.impl.ExpressionVariableImpl <em>Expression Variable</em>}' class.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @see org.hopper.language.portugol.impl.ExpressionVariableImpl
     * @see org.hopper.language.portugol.impl.PortugolPackageImpl#getExpressionVariable()
     * @generated
     */
    EClass EXPRESSION_VARIABLE = eINSTANCE.getExpressionVariable();

    /**
     * The meta object literal for the '<em><b>Value</b></em>' reference feature.
     * <!-- begin-user-doc -->
     * <!-- end-user-doc -->
     * @generated
     */
    EReference EXPRESSION_VARIABLE__VALUE = eINSTANCE.getExpressionVariable_Value();

  }

} //PortugolPackage
