/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EObject;

/**
 * <!-- begin-user-doc -->
 * A representation of the model object '<em><b>Block Sub Programs</b></em>'.
 * <!-- end-user-doc -->
 *
 * <p>
 * The following features are supported:
 * </p>
 * <ul>
 *   <li>{@link org.hopper.language.portugol.BlockSubPrograms#getParams <em>Params</em>}</li>
 *   <li>{@link org.hopper.language.portugol.BlockSubPrograms#getDeclarations <em>Declarations</em>}</li>
 *   <li>{@link org.hopper.language.portugol.BlockSubPrograms#getCommands <em>Commands</em>}</li>
 * </ul>
 *
 * @see org.hopper.language.portugol.PortugolPackage#getBlockSubPrograms()
 * @model
 * @generated
 */
public interface BlockSubPrograms extends EObject
{
  /**
   * Returns the value of the '<em><b>Params</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Params</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Params</em>' containment reference.
   * @see #setParams(SubprogramParamDeclaration)
   * @see org.hopper.language.portugol.PortugolPackage#getBlockSubPrograms_Params()
   * @model containment="true"
   * @generated
   */
  SubprogramParamDeclaration getParams();

  /**
   * Sets the value of the '{@link org.hopper.language.portugol.BlockSubPrograms#getParams <em>Params</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Params</em>' containment reference.
   * @see #getParams()
   * @generated
   */
  void setParams(SubprogramParamDeclaration value);

  /**
   * Returns the value of the '<em><b>Declarations</b></em>' containment reference.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Declarations</em>' containment reference isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Declarations</em>' containment reference.
   * @see #setDeclarations(DeclarationsBlock)
   * @see org.hopper.language.portugol.PortugolPackage#getBlockSubPrograms_Declarations()
   * @model containment="true"
   * @generated
   */
  DeclarationsBlock getDeclarations();

  /**
   * Sets the value of the '{@link org.hopper.language.portugol.BlockSubPrograms#getDeclarations <em>Declarations</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @param value the new value of the '<em>Declarations</em>' containment reference.
   * @see #getDeclarations()
   * @generated
   */
  void setDeclarations(DeclarationsBlock value);

  /**
   * Returns the value of the '<em><b>Commands</b></em>' containment reference list.
   * The list contents are of type {@link org.hopper.language.portugol.AbstractCommand}.
   * <!-- begin-user-doc -->
   * <p>
   * If the meaning of the '<em>Commands</em>' containment reference list isn't clear,
   * there really should be more of a description here...
   * </p>
   * <!-- end-user-doc -->
   * @return the value of the '<em>Commands</em>' containment reference list.
   * @see org.hopper.language.portugol.PortugolPackage#getBlockSubPrograms_Commands()
   * @model containment="true"
   * @generated
   */
  EList<AbstractCommand> getCommands();

} // BlockSubPrograms
