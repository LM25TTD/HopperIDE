/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.portugol.impl;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

import org.hopper.language.portugol.BlockFunction;
import org.hopper.language.portugol.FunctionName;
import org.hopper.language.portugol.PortugolPackage;
import org.hopper.language.portugol.VarType;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Block Function</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.hopper.language.portugol.impl.BlockFunctionImpl#getFunctionName <em>Function Name</em>}</li>
 *   <li>{@link org.hopper.language.portugol.impl.BlockFunctionImpl#getReturnType <em>Return Type</em>}</li>
 * </ul>
 *
 * @generated
 */
public class BlockFunctionImpl extends BlockSubProgramsImpl implements BlockFunction
{
  /**
   * The cached value of the '{@link #getFunctionName() <em>Function Name</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getFunctionName()
   * @generated
   * @ordered
   */
  protected FunctionName functionName;

  /**
   * The cached value of the '{@link #getReturnType() <em>Return Type</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getReturnType()
   * @generated
   * @ordered
   */
  protected VarType returnType;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected BlockFunctionImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return PortugolPackage.Literals.BLOCK_FUNCTION;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public FunctionName getFunctionName()
  {
    return functionName;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetFunctionName(FunctionName newFunctionName, NotificationChain msgs)
  {
    FunctionName oldFunctionName = functionName;
    functionName = newFunctionName;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME, oldFunctionName, newFunctionName);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setFunctionName(FunctionName newFunctionName)
  {
    if (newFunctionName != functionName)
    {
      NotificationChain msgs = null;
      if (functionName != null)
        msgs = ((InternalEObject)functionName).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME, null, msgs);
      if (newFunctionName != null)
        msgs = ((InternalEObject)newFunctionName).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME, null, msgs);
      msgs = basicSetFunctionName(newFunctionName, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME, newFunctionName, newFunctionName));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public VarType getReturnType()
  {
    return returnType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetReturnType(VarType newReturnType, NotificationChain msgs)
  {
    VarType oldReturnType = returnType;
    returnType = newReturnType;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE, oldReturnType, newReturnType);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public void setReturnType(VarType newReturnType)
  {
    if (newReturnType != returnType)
    {
      NotificationChain msgs = null;
      if (returnType != null)
        msgs = ((InternalEObject)returnType).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE, null, msgs);
      if (newReturnType != null)
        msgs = ((InternalEObject)newReturnType).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE, null, msgs);
      msgs = basicSetReturnType(newReturnType, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE, newReturnType, newReturnType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME:
        return basicSetFunctionName(null, msgs);
      case PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE:
        return basicSetReturnType(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME:
        return getFunctionName();
      case PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE:
        return getReturnType();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME:
        setFunctionName((FunctionName)newValue);
        return;
      case PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE:
        setReturnType((VarType)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME:
        setFunctionName((FunctionName)null);
        return;
      case PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE:
        setReturnType((VarType)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case PortugolPackage.BLOCK_FUNCTION__FUNCTION_NAME:
        return functionName != null;
      case PortugolPackage.BLOCK_FUNCTION__RETURN_TYPE:
        return returnType != null;
    }
    return super.eIsSet(featureID);
  }

} //BlockFunctionImpl
