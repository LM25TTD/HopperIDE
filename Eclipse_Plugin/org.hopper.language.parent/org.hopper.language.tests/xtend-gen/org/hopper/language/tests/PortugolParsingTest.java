/**
 * generated by Xtext 2.9.0
 */
package org.hopper.language.tests;

import com.google.inject.Inject;
import org.eclipse.xtend2.lib.StringConcatenation;
import org.eclipse.xtext.junit4.InjectWith;
import org.eclipse.xtext.junit4.XtextRunner;
import org.eclipse.xtext.junit4.util.ParseHelper;
import org.eclipse.xtext.xbase.lib.Exceptions;
import org.hopper.language.portugol.Model;
import org.hopper.language.tests.PortugolInjectorProvider;
import org.junit.Assert;
import org.junit.Test;
import org.junit.runner.RunWith;

@RunWith(XtextRunner.class)
@InjectWith(PortugolInjectorProvider.class)
@SuppressWarnings("all")
public class PortugolParsingTest {
  @Inject
  private ParseHelper<Model> parseHelper;
  
  @Test
  public void loadModel() {
    try {
      StringConcatenation _builder = new StringConcatenation();
      _builder.append("algoritmo \"Maior_de_dois\"");
      _builder.newLine();
      _builder.append("// Função : Faça um Programa que peça dois números e imprima o maior deles.");
      _builder.newLine();
      _builder.append("// Autor :    Iasmim Cunha");
      _builder.newLine();
      _builder.append("// Data : 5/8/2013");
      _builder.newLine();
      _builder.append("// Seção de Declarações ");
      _builder.newLine();
      _builder.append("var");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("primeiro : real");
      _builder.newLine();
      _builder.append("  ");
      _builder.append("segundo : real");
      _builder.newLine();
      _builder.append("inicio");
      _builder.newLine();
      _builder.append("// Seção de Comandos ");
      _builder.newLine();
      _builder.append("escreval(\"Entre com o primeiro valor...\")");
      _builder.newLine();
      _builder.append("leia(primeiro)");
      _builder.newLine();
      _builder.append("escreval(\"Entre com o segundo valor...\")");
      _builder.newLine();
      _builder.append("leia(segundo)");
      _builder.newLine();
      _builder.newLine();
      _builder.append("   ");
      _builder.append("se(primeiro > segundo) entao");
      _builder.newLine();
      _builder.append("       ");
      _builder.append("escreval(\"O maior valor entre os números é:\",primeiro)");
      _builder.newLine();
      _builder.append("   ");
      _builder.append("senao");
      _builder.newLine();
      _builder.append("       ");
      _builder.append("escreval(\"O maior valor entre os números é:\",segundo)");
      _builder.newLine();
      _builder.append("   ");
      _builder.append("fimse");
      _builder.newLine();
      _builder.append("fimalgoritmo");
      _builder.newLine();
      final Model result = this.parseHelper.parse(_builder);
      Assert.assertNotNull(result);
    } catch (Throwable _e) {
      throw Exceptions.sneakyThrow(_e);
    }
  }
}
